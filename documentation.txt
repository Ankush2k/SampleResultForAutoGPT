This code implements a depth-first search algorithm using recursion. The algorithm takes a graph and a source node as input and returns a list of nodes in the order they were visited. The algorithm works by visiting the source node and then recursively visiting all of its neighbours. The neighbours are visited in the order they appear in the graph dictionary. The algorithm keeps track of the visited nodes in a list called 'path'. If a node has already been visited, it is not visited again. If a node has no neighbours, it is considered a leaf node and the algorithm backtracks to the previous node. The algorithm terminates when all nodes have been visited.